// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int           @id @default(autoincrement())
  email              String        @unique
  fullName           String
  password           String
  role               String        @default("student") //admin / student / teacher
  wantsNotifications Boolean       @default(false)
  avatarUrl          String?
  refreshToken       String?
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  lessons            LessonUsers[]
}

model Lesson {
  id        Int           @id @default(autoincrement())
  location  String
  startTime DateTime
  endTime   DateTime
  date      DateTime
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  users     LessonUsers[]
}

model LessonUsers {
  userId     Int
  lessonId   Int
  willAttend Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  lesson     Lesson   @relation(fields: [lessonId], references: [id])

  @@id([userId, lessonId]) // composite primary key
}

model Office {
  id           Int    @id @default(autoincrement())
  address      String
  workingHours String
  workingDays  String
}
